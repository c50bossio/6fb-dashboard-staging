{
  "name": "bookedbarber-dashboard",
  "version": "1.0.0",
  "private": true,
  "description": "BookedBarber - AI-powered barbershop management platform",
  "scripts": {
    "dev": "next dev -p 9999",
    "build": "next build",
    "start": "next start -p 9999",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:nuclear": "jest --testNamePattern='Nuclear|nuclear'",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:cross-browser": "playwright test tests/e2e/cross-browser-mobile.spec.js",
    "test:nuclear-e2e": "playwright test tests/e2e/settings-nuclear-input.spec.js",
    "test:all": "npm run test && npm run test:e2e",
    "test:ci": "npm run test:coverage && npm run test:e2e",
    "playwright:install": "playwright install",
    "playwright:install-deps": "playwright install-deps",
    "check-env": "node scripts/check-env.js",
    "setup-db": "node scripts/setup-database.js",
    "setup-dashboard": "node scripts/init-dashboard-database.js",
    "test-dashboard": "node test-dashboard-database.js",
    "test-performance": "node test-performance-improvement.js",
    "health": "curl -s http://localhost:9999/api/health | jq .",
    "docker:dev": "./docker-dev-start.sh",
    "docker:stop": "./docker-stop.sh",
    "quality-check": "./scripts/quality-check.sh",
    "lint:fix": "next lint --fix",
    "context:clean": "node scripts/context-cleanup.js",
    "context:clean:dry": "node scripts/context-cleanup.js --dry-run",
    "context:clean:aggressive": "node scripts/context-cleanup.js --aggressive",
    "context:focus": "git diff --name-only HEAD~1",
    "context:size": "find . -name '*.js' -o -name '*.ts' -o -name '*.jsx' -o -name '*.tsx' | grep -v node_modules | wc -l",
    "check-navigation": "node .claude/hooks/feature_navigation_check.js",
    "setup-booking-db": "node scripts/setup-booking-links-db.js",
    "test-booking-apis": "node scripts/test-booking-apis.js",
    "test:security": "playwright test __tests__/security/comprehensive-security-test.spec.js",
    "test:security:sast": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'SAST Only'",
    "test:security:dast": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'DAST Only'",
    "test:security:api": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'API Security'",
    "test:security:gdpr": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'GDPR Compliance'",
    "test:security:pentest": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'Penetration Testing'",
    "test:security:monitoring": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'Security Monitoring'",
    "test:security:quick": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'Quick Security Health Check'",
    "security:report": "node __tests__/security/ci-cd/generate-report.js --scan-id=manual-$(date +%Y%m%d-%H%M%S) --input-dir=security-results --output-dir=reports",
    "security:tools:install": "pip install bandit safety semgrep && npm install -g retire audit-ci",
    "security:config:validate": "playwright test __tests__/security/comprehensive-security-test.spec.js -g 'Validate Security Configuration'",
    "performance:test": "node scripts/performance-test.js",
    "performance:analyze": "ANALYZE=true npm run build",
    "performance:lighthouse": "npx lighthouse http://localhost:9999 --only-categories=performance --output=html --output-path=./performance-report.html",
    "performance:vitals": "node -e \"import('./lib/performance.js').then(m => console.log('Performance monitoring ready'))\"",
    "deploy:production": "./scripts/deploy/production-deploy.sh",
    "deploy:check": "./scripts/deploy/production-deploy.sh --help",
    "deploy:build": "docker-compose -f docker-compose.production.yml build --parallel",
    "deploy:up": "docker-compose -f docker-compose.production.yml up -d",
    "deploy:down": "docker-compose -f docker-compose.production.yml down",
    "deploy:logs": "docker-compose -f docker-compose.production.yml logs -f",
    "deploy:status": "docker-compose -f docker-compose.production.yml ps",
    "monitoring:start": "./scripts/monitoring/start-monitoring.sh",
    "monitoring:stop": "docker-compose -f monitoring/docker-compose.monitoring.yml down",
    "monitoring:logs": "docker-compose -f monitoring/docker-compose.monitoring.yml logs -f",
    "monitoring:status": "docker-compose -f monitoring/docker-compose.monitoring.yml ps",
    "monitoring:restart": "npm run monitoring:stop && npm run monitoring:start",
    "backup:create": "./scripts/create-full-backup.sh",
    "backup:restore": "./scripts/restore-system.sh",
    "backup:list": "ls -lht /backup/*backup*.tar.gz 2>/dev/null || echo 'No backups found'",
    "seed-calendar": "node scripts/seed-calendar-data.js",
    "claude:prep": "./claude-session-prep.sh",
    "claude:clean": "git add . && git commit -m 'WIP: Claude session checkpoint'",
    "claude:health": "node test-supabase-access.js && curl -s http://localhost:9999/api/health && curl -s http://localhost:8001/health",
    "quality:report": "node code-quality-report.js",
    "quality:check": "npm run lint && npm run test:coverage && npm run quality:report",
    "cleanup-test-data": "node scripts/cleanup-test-data.js",
    "cleanup-test-data:dry": "node scripts/cleanup-test-data.js --dry-run",
    "migrate:recurring": "node scripts/run-recurring-migration.js",
    "migrate:recurring:help": "node scripts/run-migration.js --help",
    "test:recurring": "node scripts/test-new-recurring-system.js",
    "seed:analytics": "node scripts/seed-analytics-data.js seed",
    "clear:analytics": "node scripts/seed-analytics-data.js clear",
    "reset:analytics": "node scripts/seed-analytics-data.js reset"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.7",
    "@heroicons/react": "^2.2.0",
    "@sentry/nextjs": "^10.5.0",
    "@sentry/node": "^10.5.0",
    "@stripe/react-stripe-js": "^3.9.0",
    "@stripe/stripe-js": "^7.8.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.54.0",
    "@vercel/edge-config": "^1.4.0",
    "autoprefixer": "^10.4.16",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "lucide-react": "^0.536.0",
    "next": "^14.2.31",
    "next-themes": "^0.4.6",
    "postcss": "^8.4.32",
    "pusher-js": "^8.4.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.5.2",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.3.6",
    "tailwindcss-animate": "^1.0.7",
    "web-vitals": "^5.1.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@ai-sdk/anthropic": "^2.0.0",
    "@ai-sdk/openai": "^2.0.1",
    "@anthropic-ai/sdk": "^0.57.0",
    "@faker-js/faker": "^9.9.0",
    "@fullcalendar/core": "^6.1.18",
    "@fullcalendar/daygrid": "^6.1.18",
    "@fullcalendar/interaction": "^6.1.18",
    "@fullcalendar/list": "^6.1.18",
    "@fullcalendar/react": "^6.1.18",
    "@fullcalendar/resource": "^6.1.18",
    "@fullcalendar/resource-timegrid": "^6.1.18",
    "@fullcalendar/resource-timeline": "^6.1.18",
    "@fullcalendar/rrule": "^6.1.18",
    "@fullcalendar/timegrid": "^6.1.18",
    "@google/generative-ai": "^0.24.1",
    "@playwright/test": "^1.54.1",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@sendgrid/mail": "^8.1.5",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/node": "^20.10.5",
    "@types/react": "^18.2.45",
    "@types/react-dom": "^18.2.18",
    "ai": "^5.0.0",
    "axios": "^1.11.0",
    "bull": "^4.16.5",
    "canvas-confetti": "^1.9.3",
    "chalk": "^5.5.0",
    "chart.js": "^4.5.0",
    "eslint": "^8.56.0",
    "eslint-config-next": "14.0.4",
    "eslint-plugin-import": "^2.32.0",
    "glob": "^11.0.3",
    "html2canvas": "^1.4.1",
    "intersection-observer": "^0.12.2",
    "ioredis": "^5.7.0",
    "jest": "^29.7.0",
    "jest-canvas-mock": "^2.5.2",
    "jest-environment-jsdom": "^29.7.0",
    "jest-transform-css": "^6.0.1",
    "jspdf": "^3.0.1",
    "limiter": "^3.0.0",
    "luxon": "^3.4.4",
    "node-fetch": "^2.7.0",
    "nodemailer": "^6.10.1",
    "openai": "^5.11.0",
    "otplib": "^12.0.1",
    "playwright": "^1.54.2",
    "posthog-js": "^1.258.5",
    "posthog-node": "^5.6.0",
    "puppeteer": "^24.15.0",
    "pusher": "^5.2.0",
    "qrcode": "^1.5.4",
    "react-chartjs-2": "^5.3.0",
    "recharts": "^3.1.0",
    "resize-observer-polyfill": "^1.5.1",
    "rrule": "^2.7.2",
    "stripe": "^18.4.0",
    "twilio": "^5.8.0",
    "typescript": "^5.3.3",
    "uuid": "^11.1.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "whatwg-fetch": "^3.6.20"
  }
}
