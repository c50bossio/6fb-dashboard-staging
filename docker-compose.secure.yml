version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        NODE_ENV: production
    ports:
      - "9999:9999"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL:-http://localhost:9999}
    volumes:
      - ./app:/app/app:ro
      - ./components:/app/components:ro
      - ./lib:/app/lib:ro
      - ./public:/app/public:ro
    networks:
      - agent-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.secure
    ports:
      - "8001:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=8000
      # Security settings
      - ENABLE_RATE_LIMITING=true
      - ENABLE_CSRF_PROTECTION=true
      - ENABLE_DDOS_PROTECTION=true
      - MAX_REQUEST_SIZE=10485760
      - GLOBAL_RATE_LIMIT=100
      - AUTH_RATE_LIMIT=5
      - API_RATE_LIMIT=1000
      # Database
      - DATABASE_PATH=/app/data/agent_system.db
      # API keys (from .env.local)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./services:/app/services:ro
      - ./middleware:/app/middleware:ro
    networks:
      - agent-network
    depends_on:
      - frontend
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  agent-network:
    driver: bridge
