# Production Environment Configuration Template
# Copy this file to .env.production and fill in the actual values
# NEVER commit actual secrets or passwords to version control

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# Application URLs
FRONTEND_URL=https://agent.6fb.ai
PRODUCTION_URL=https://agent.6fb.ai
STAGING_URL=https://staging-agent.6fb.ai
NEXT_PUBLIC_API_URL=https://api.6fb.ai

# Build Configuration
BUILD_DATE=""
VCS_REF=""
VERSION=""

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL Production)
# =============================================================================
# Primary Database
DB_HOST=postgres
DB_PORT=5432
DB_NAME=agent_system
DB_USER=agent_user
DB_PASSWORD=""  # REQUIRED: Strong password with special characters
DATABASE_URL=""  # REQUIRED: postgresql://username:password@host:port/database?sslmode=require

# Database Security
DB_SSL_MODE=require
DB_CONNECTION_TIMEOUT=30
DB_MAX_CONNECTIONS=20
DB_MIN_CONNECTIONS=5

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=""  # REQUIRED: Strong Redis password
REDIS_URL=""  # REQUIRED: redis://:password@host:port/db
REDIS_DB=0
REDIS_MAX_CONNECTIONS=10

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Configuration
JWT_SECRET=""  # REQUIRED: Generate with: openssl rand -base64 64
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRES=1800  # 30 minutes
REFRESH_TOKEN_EXPIRES=604800  # 7 days

# Encryption
ENCRYPTION_KEY=""  # REQUIRED: Generate with: openssl rand -base64 32
SECRET_KEY=""  # REQUIRED: Generate with: openssl rand -base64 64

# Password Policy
PASSWORD_MIN_LENGTH=12
MAX_FAILED_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15

# Admin Access
ADMIN_PASSWORD=""  # REQUIRED: Strong admin password

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=3600
AUTH_RATE_LIMIT=10
AUTH_RATE_WINDOW=300
API_RATE_LIMIT=5000
API_RATE_WINDOW=3600

# =============================================================================
# CORS AND SECURITY HEADERS
# =============================================================================
ALLOWED_ORIGINS=https://agent.6fb.ai,https://staging-agent.6fb.ai
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
ALLOWED_HEADERS=*
ALLOW_CREDENTIALS=true

# Content Security Policy
CSP_NONCE=""  # Generate dynamically per request
SECURE_HEADERS_ENABLED=true

# =============================================================================
# MONITORING AND METRICS
# =============================================================================
ENABLE_MONITORING=true
METRICS_PORT=8090
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# ALERTING CONFIGURATION
# =============================================================================
# Email Notifications
EMAIL_NOTIFICATIONS_ENABLED=true
SMTP_SERVER=""  # REQUIRED: Your SMTP server
SMTP_PORT=587
SMTP_USERNAME=""  # REQUIRED: SMTP username
SMTP_PASSWORD=""  # REQUIRED: SMTP password
SMTP_USE_TLS=true
FROM_EMAIL=security@6fb.ai
SECURITY_ALERT_EMAILS=""  # REQUIRED: Comma-separated list of admin emails

# Webhook Notifications
WEBHOOK_NOTIFICATIONS_ENABLED=true
SECURITY_WEBHOOK_URL=""  # Optional: Security webhook URL
WEBHOOK_SECRET=""  # Generate with: openssl rand -base64 32

# Slack Integration
SLACK_WEBHOOK_URL=""  # Optional: Slack webhook for alerts
SLACK_CHANNEL=#security-alerts

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================
# OpenAI
OPENAI_API_KEY=""  # REQUIRED: Your OpenAI API key
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_MAX_TOKENS=4000

# Anthropic Claude
ANTHROPIC_API_KEY=""  # REQUIRED: Your Anthropic API key
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# Google AI
GOOGLE_AI_API_KEY=""  # Optional: Google AI API key

# =============================================================================
# GDPR COMPLIANCE CONFIGURATION
# =============================================================================
GDPR_COMPLIANCE_ENABLED=true
DATA_RETENTION_DAYS=365
AUDIT_LOG_RETENTION_DAYS=2555  # 7 years for compliance
GDPR_CONTACT_EMAIL=privacy@6fb.ai
GDPR_DPO_EMAIL=dpo@6fb.ai

# Data Processing Settings
ENABLE_DATA_ANONYMIZATION=true
ENABLE_DATA_PSEUDONYMIZATION=true
CONSENT_TRACKING_ENABLED=true

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# AWS S3 Configuration for Backups
BACKUP_S3_BUCKET=""  # REQUIRED: S3 bucket for backups
BACKUP_S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=""  # REQUIRED: AWS access key
AWS_SECRET_ACCESS_KEY=""  # REQUIRED: AWS secret key

# Local Backup Configuration
BACKUP_LOCAL_PATH=/app/backups
BACKUP_COMPRESSION=gzip

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
SSL_CERT_PATH=/etc/nginx/certs/cert.pem
SSL_KEY_PATH=/etc/nginx/certs/key.pem
SSL_PROTOCOLS="TLSv1.2 TLSv1.3"
SSL_CIPHERS="ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384"

# =============================================================================
# DISTRIBUTED TRACING
# =============================================================================
ENABLE_DISTRIBUTED_TRACING=true
JAEGER_AGENT_HOST=jaeger
JAEGER_AGENT_PORT=6831
TRACE_SAMPLING_RATE=0.1

# =============================================================================
# GRAFANA CONFIGURATION
# =============================================================================
GRAFANA_ADMIN_PASSWORD=""  # REQUIRED: Strong Grafana admin password
GRAFANA_SECRET_KEY=""  # Generate with: openssl rand -base64 32

# =============================================================================
# DATA STORAGE CONFIGURATION
# =============================================================================
DATA_DIR=./data
UPLOAD_MAX_SIZE=10485760  # 10MB
ALLOWED_FILE_TYPES=pdf,doc,docx,txt,png,jpg,jpeg

# =============================================================================
# FEATURE FLAGS
# =============================================================================
NEXT_PUBLIC_ENABLE_RAG=true
NEXT_PUBLIC_ENABLE_ANALYTICS=true
NEXT_PUBLIC_ENABLE_MONITORING=true
ENABLE_ADVANCED_SECURITY=true
ENABLE_AUDIT_LOGGING=true

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================
# Stripe (if payment processing is enabled)
STRIPE_SECRET_KEY=""  # Optional: Stripe secret key
STRIPE_WEBHOOK_SECRET=""  # Optional: Stripe webhook secret

# Third-party APIs
EXTERNAL_API_TIMEOUT=30
EXTERNAL_API_RETRY_ATTEMPTS=3

# =============================================================================
# SECURITY SCANNING
# =============================================================================
ENABLE_SECURITY_SCANNING=true
TRIVY_DB_REPOSITORY=ghcr.io/aquasecurity/trivy-db
VULNERABILITY_SCAN_SCHEDULE="0 4 * * *"  # Daily at 4 AM

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_FORMAT=json
LOG_ROTATION_SIZE=100MB
LOG_RETENTION_DAYS=30
LOG_LEVEL_OVERRIDE=""  # Optional: Override specific logger levels

# Structured Logging
ENABLE_STRUCTURED_LOGGING=true
LOG_REQUEST_BODY=false  # Security: Don't log request bodies in production
LOG_RESPONSE_BODY=false  # Security: Don't log response bodies in production

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
WORKER_PROCESSES=4
MAX_REQUESTS_PER_WORKER=1000
WORKER_TIMEOUT=300
KEEPALIVE_TIMEOUT=2

# Database Connection Pool
DB_POOL_SIZE=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# =============================================================================
# DEVELOPMENT OVERRIDES (Remove in production)
# =============================================================================
# These should be commented out or removed in actual production deployment
# DEVELOPMENT_MODE=false
# BYPASS_AUTH=false
# MOCK_EXTERNAL_APIS=false

# =============================================================================
# DEPLOYMENT METADATA
# =============================================================================
DEPLOYMENT_DATE=""
DEPLOYMENT_VERSION=""
DEPLOYMENT_COMMIT=""
DEPLOYMENT_ENVIRONMENT=production

# =============================================================================
# CONTAINER CONFIGURATION
# =============================================================================
CONTAINER_MEMORY_LIMIT=2g
CONTAINER_CPU_LIMIT=2.0
CONTAINER_USER_ID=1000
CONTAINER_GROUP_ID=1000

# =============================================================================
# SECRETS GENERATION COMMANDS
# =============================================================================
# Run these commands to generate secure secrets:
#
# JWT_SECRET:
# openssl rand -base64 64
#
# ENCRYPTION_KEY:
# openssl rand -base64 32
#
# SECRET_KEY:
# openssl rand -base64 64
#
# Database Password:
# openssl rand -base64 32 | tr -d "=+/" | cut -c1-32
#
# Redis Password:
# openssl rand -base64 32 | tr -d "=+/" | cut -c1-32
#
# Webhook Secret:
# openssl rand -base64 32
#
# Admin Password:
# Generate a strong password with uppercase, lowercase, numbers, and special characters