apiVersion: v1
kind: Service
metadata:
  name: sixfb-ai-backend-service
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: sixfb-ai-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sixfb-ai-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: sixfb-ai-backend
    app.kubernetes.io/component: backend

---
apiVersion: v1
kind: Service
metadata:
  name: sixfb-ai-frontend-service
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: sixfb-ai-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: sixfb-ai-frontend
    app.kubernetes.io/component: frontend

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-service
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: nginx-proxy
    app.kubernetes.io/component: proxy
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: nginx-proxy
    app.kubernetes.io/component: proxy
  loadBalancerSourceRanges:
  - 0.0.0.0/0

---
apiVersion: v1
kind: Service
metadata:
  name: sixfb-redis-service
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: sixfb-postgres-service
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  type: ExternalName
  externalName: sixfb-ai-db-cluster.cluster-xxxxx.us-west-2.rds.amazonaws.com
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sixfb-ai-backend-monitor
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: sixfb-ai-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sixfb-ai-system
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sixfb-ai-backend
      app.kubernetes.io/component: backend
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    honorLabels: true
  namespaceSelector:
    matchNames:
    - sixfb-ai-system

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sixfb-ai-ingress
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: sixfb-ai-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: sixfb-ai-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "10"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - api.sixfb-ai.com
    - sixfb-ai.com
    - www.sixfb-ai.com
    secretName: sixfb-ai-tls
  rules:
  - host: sixfb-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-proxy-service
            port:
              number: 80
  - host: www.sixfb-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-proxy-service
            port:
              number: 80
  - host: api.sixfb-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-proxy-service
            port:
              number: 80

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sixfb-ai-network-policy
  namespace: sixfb-ai-system
  labels:
    app.kubernetes.io/name: sixfb-ai-network-policy
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: sixfb-ai-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx proxy
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: nginx-proxy
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
  # Allow ingress from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: sixfb-ai-system
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: sixfb-monitoring
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow outbound HTTPS
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow database connections
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis connections
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow internal service communication
  - to:
    - namespaceSelector:
        matchLabels:
          name: sixfb-ai-system